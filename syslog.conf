input {
    stdin {}
}

filter {
    # Parse syslog to get the timestamp, host, process and pid
    dissect {
        mapping => {
            "message" => "%{ts}  %{+ts} %{+ts} %{host} %{process}[%{pid}]: %{syslog_msg}"
        }
    }
    # if syslog message has pam_unix (or pam_sss) in it, then it is a pam message
    if "_dissectfailure" not in [tags] and [syslog_msg] =~ ".*?pam_unix|pam_sss.*"
    {
        dissect {
            mapping => {
                "syslog_msg" => "%{activity}: %{activity_result}"
            }
        }
    }

    # extracting meaningful information from the syslog message
    grok { 
        break_on_match => false
        patterns_dir => "/Users/sumitsontakke/Documents/reg-exp"
        match => [
            "syslog_msg","%{IP:activity.ip_address}",
            "syslog_msg","%{IP4X:activity.ip_address.masked}",
            "syslog_msg","%{POSINT:activity.port}",
            "syslog_msg","%{SYSLOGTIMESTAMP:activity.timestamp}"
        ] 
    }
}

output {
    stdout { codec => "rubydebug" }
}
